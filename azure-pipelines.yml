# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

# ADO project at https://dev.azure.com/pdemeulenaer/

trigger:
- master

# pool:
#   vmImage: 'ubuntu-latest'
# strategy:
#   matrix:
#     Python37:
#       python.version: '3.7'
#       architecture: 'x64'

stages:

- stage: Build
  displayName: 'Build doc'
  jobs:
  - job: Build
    displayName: 'Build'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      matrix:
        Python37:
          python.version: '3.7'
          architecture: 'x64'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use python $(python.version)'

    - script: |
        python -m pip install --upgrade pip
        pip install -r Requirements.txt
      displayName: 'Install dependencies'

    - script: |
        pip install --upgrade sphinx
      displayName: 'Install sphinx'

    - task: CmdLine@2
      inputs:
        script: 'make html' 
        workingDirectory: '$(Build.SourcesDirectory)/docs/' 
      displayName: 'Compile documentation'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/docs/_build/html'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        Contents: '**'
      displayName: 'Copy documentation files to artifact directory'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'drop'
        publishLocation: 'Container'
      displayName: 'Publish documentation as artifact'

- stage: Deploy
  displayName: 'Deploy doc'
  jobs:
  - job: Deploy
    displayName: 'Deploy'
    pool:
      vmImage: 'windows-latest'
    steps:

      # download the artifact drop from the previous job
      - task: DownloadBuildArtifacts@0
        inputs:
          artifactName: drop
          downloadPath: '$(Build.ArtifactStagingDirectory)' 

      - task: AzureRmWebAppDeployment@4
        inputs:
          ConnectionType: 'AzureRM'
          azureSubscription: 'webapp-sphinx-connection'
          appType: 'webApp'
          WebAppName: 'pdemeulenaer-doc'
          packageForLinux: '$(Build.ArtifactStagingDirectory)/drop'
          enableCustomDeployment: true
          DeploymentType: 'webDeploy'            

    # - task: AzureRmWebAppDeployment@4
    #   inputs:
    #     ConnectionType: 'AzureRM'
    #     appType: 'webApp'
    #     WebAppName: 'pdemeulenaer-doc'
    #     deployToSlotOrASE: true
    #     ResourceGroupName: 'sphinx-doc-rg'
    #     SlotName: 'production'
    #     packageForLinux: '$(Build.ArtifactStagingDirectory)/_pdemeulenaer.my-ds-documentation/drop'
